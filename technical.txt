#         Technical details for the rpanel library

Installation
------------

To install using devtools to unload the current version:
      devtools::install("rpanel")
      
To install the old-fashioned way:
      install.packages("~/research/rpanel/rpanel/", repos = NULL, type = "source")

To install from GitHub:
		devtools::install_github("adrian-bowman/rpanel/rpanel")

To install from a terminal:  
      cd ~/research/rpanel
      R CMD INSTALL rpanel

R code to detach the current package and install a new one:
      detach(package:rpanel)
      unloadNamespace("rpanel")
      install.packages("~/research/rpanel/rpanel/", repos = NULL, type = "source")


Checking
--------

To check that rpanel works without BWidget, use a terminal to move the BWidget directory to and from its storage location.
      cd /usr/local/lib
      mv ~/research/rpanel/bwidget/bwidget-1.9.10 .
      mv bwidget-1.9.10 ~/research/rpanel/bwidget/

Update the inst/history, ChangeLog, NAMESPACE, DESCRIPTION, R/rpanel.r (onAttach) 
inst/CITATION and man/rpanel.package.Rd (date, version number, function names) files as required.

From the devtools and related packages, use
      devtools::check("rpanel")
      devtools::spell_check("rpanel")
      devtools::check_rhub("rpanel")

To check that it can be built under Windows
      devtools::check_win_devel("rpanel")
      devtools::check_win_release("rpanel")
      devtools::check_win_oldrelease("rpanel")

Check package dependencies
      R CMD build rpanel (from a terminal)
      tools::check_packages_in_dir(".", reverse = list())
      tools::summarize_check_packages_in_dir_results(".")
      
The approved way of checking dependencies is the revdepcheck page but I can't get this to work. On a Mac, the current CRAN version of rpanel can't be installed while other things go wrong on Windows.
      devtools::revdep("rpanel")
      setwd("rpanel")
      usethis::use_revdep()
      setwd("..")
      revdepcheck::revdep_check("rpanel")

If data needs to be saved more efficiently, then this should be
      R CMD build --resave-data rpanel

The old-fashioned checking procedure, which is also worth doing, is invoked from a terminal by
      R CMD build rpanel
      R CMD CHECK --as-cran rpanel    
      
The old-fashioned method of creating a Windows binary version is to upload to
      win-builder.r-project.org/
      
Submission to CRAN
------------------

Submit by
      devtools::release("rpanel")
      
The old web form is at
          https://cran.r-project.org/submit.html

Github PAT regeneration
-----------------------

To establish identity:
  usethis::use_git_config(user.name = "adrian-bowman",
                          user.email = "adrian.bowman@glasgow.ac.uk")

Logon to Github and regenerate the PAT.
  Settings > Developer settings > ...
  Copy this immediately.
Alternatively, try
  usethis::create_github_token() 
In RStudio:
  gitcreds::gitcreds_set()
This will give a prompt for the new PAT.
Restart R and RStudio.

15.11.22_3: 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
15.11.22_2: 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
15.11.22: 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
23.08.22: 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
