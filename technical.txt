#         Technical details for the rpanel library

Installation
------------

To install using devtools to unload the current version:
      devtools::install("rpanel")
      
To install the old-fashioned way:
      install.packages("~/research/rpanel/rpanel/", repos = NULL, type = "source")

To install from GitHub:
		devtools::install_github("adrian-bowman/rpanel/rpanel")

To install from a terminal:  
      cd ~/research/rpanel
      R CMD INSTALL rpanel

R code to detach the current package and install a new one:
      detach(package:rpanel)
      unloadNamespace("rpanel")
      install.packages("~/research/rpanel/rpanel/", repos = NULL, type = "source")


Checking
--------

Update the inst/history, ChangeLog, NAMESPACE, DESCRIPTION, R/rpanel.r (onAttach) 
inst/CITATION and man/rpanel.package.Rd (date, version number, function names) files as required.

From the devtools package, use
      devtools::check("rpanel")

To check that it can be built under Windows
      devtools::check_win_devel("rpanel")
      devtools::check_win_release("rpanel")
      devtools::check_win_oldrelease("rpanel")

Check package dependencies
      tools::check_packages_in_dir("rpanel")

If data needs to be saved more efficiently, then this should be
      R CMD build --resave-data rpanel

The old-fashioned checking procedure is invoked from a terminal by
      R CMD build rpanel
      R CMD CHECK --as-cran rpanel    
      
The old-fashioned method of creating a Windows binary version is to upload to
      win-builder.r-project.org/
      
Submission to CRAN
------------------

Submit by
      devtools::release("sm")
      
The old web form is at
          https://cran.r-project.org/submit.html
